title: inline image

desc: |
  Inline images are used for showing small images as part of the line of a text - for example, an icons. They are similar to normal block-level :doc:`image </element/image>`.

collections:
  - inline-elements
  - images

url: https://docutils.sourceforge.io/docs/ref/rst/roles.html#literal

examples:
  - name: Inline image syntax
    desc: |
      Inline image is actually the on :doc:`/element/substitution`, i.e. it has two parts -- the definition and usage:
    source: |
        .. |favicon1| image:: /img/favicon.ico

        Click to the |favicon1| to return home.

  - name: Image definition and usage
    desc: |
      The inline image usage may even come before the image definition.
    source: |
      The inline image |favicon2| usage may even come before the image definition.

      .. |favicon2| image:: /img/favicon.ico

  - name: Setting image options
    desc: |
      Inline image accepts all options as their block :doc:`/element/image` counterpart. For example, you want limit icon height to fit into the line:
    source: |
      .. |favicon3| image:: /img/favicon.ico
         :height: 1em
      
      Click to the |favicon3| to return home.

  - name: No inline element nesting
    desc: |
      The annoying |rst| limitation is  you :ref:`can't nest inline element <no-nested-inlines>` into another, e.g. inline image into strong emphasis, etc. Unfortunately, there is no workaround.

      Some examples of inline markup nesting that *don't work*:

      .. datatemplate:yaml:: /_data/snippet/no-nested-inlines.yaml
         :template: snippet.rst.jinja

  - name: Requires whitespace or punctation around
    desc: |
      The inline image :ref:`requires whitespace or punctation around <inline-markup-recognition>` (as all inline-level elements). Without the delimination, |rst| will not recognize markup properly from a surrounding text.

      The following examples miss delimination at the end, the beginning, and at the both. They will cause the ``WARNING: Inline substitution_reference start-string without end-string.``.

      .. code-block::
         :class: bad

         Click to the |favicon|to return home.

         Click to the|favicon| to return home.

         Click to the|favicon|to return home.
      
      Fortunately, two inline elements without no whitespace/punctation in-between are possible with *escaping mechanism* using backslash-escaped whitespace (backslash is ``\``). Backslash-espaced whitespace will be removed from the output document.

      Previous example fixed:
    source: |
      .. |favicon4| image:: /img/favicon.ico
         :height: 1em

      Click to the |favicon4|\ to return home.

      Click to the\ |favicon4| to return home.

      Click to the\ |favicon4|\ to return home.